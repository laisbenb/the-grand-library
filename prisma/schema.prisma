// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/app/_generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  STUDENT
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String
  password  String
  role      Role       @default(STUDENT)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  WishList  WishList[]
}

model Book {
  id            Int           @id @default(autoincrement())
  title         String
  description   String
  publishedYear Int
  coverImage    String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now())
  Book_Genres   Book_Genre[]
  Author_Books  Author_Book[]
  WishList      WishList[]
}

model Author {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  Author_Book Author_Book[]
}

model Genre {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  Book_Genre Book_Genre[]
}

model Book_Genre {
  bookId  Int
  genreId Int
  book    Book  @relation(fields: [bookId], references: [id], onDelete: Cascade)
  genre   Genre @relation(fields: [genreId], references: [id], onDelete: Cascade)

  @@id([bookId, genreId])
}

model Author_Book {
  authorId Int
  bookId   Int
  author   Author @relation(fields: [authorId], references: [id], onDelete: Cascade)
  book     Book   @relation(fields: [bookId], references: [id], onDelete: Cascade)

  @@id([authorId, bookId])
}

model WishList {
  id        Int      @id @default(autoincrement())
  userId    Int
  bookId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  book      Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@unique([userId, bookId])
}
